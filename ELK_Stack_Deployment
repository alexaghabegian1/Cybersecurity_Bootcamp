## Automated ELK Stack Deployment

The files in this repository were used to configure the network depicted below.

Project 1 Diagram.png

These files have been tested and used to generate a live ELK deployment on Azure. They can be used to either recreate the entire deployment pictured above. Alternatively, select portions of the elk_playbook.yml file may be used to install only certain pieces of it, such as Filebeat.

  - install-elk.yml

This document contains the following details:
- Description of the Topology
- Access Policies
- ELK Configuration
  - Beats in Use
  - Machines Being Monitored
- How to Use the Ansible Build


### Description of the Topology

The main purpose of this network is to expose a load-balanced and monitored instance of DVWA, the D*mn Vulnerable Web Application.

Load balancing ensures that the application will be highly stable, in addition to restricting access to the network.
- Load balancers ensure access to the network even if the primary web server is down. 

Integrating an ELK server allows users to easily monitor the vulnerable VMs for changes to the network and system logs.
- Filebeat records log data and ships it to a centralized index.
- Metricbeat records system metrics and ships them to a centralized index. 

The configuration details of each machine may be found below:


| Name     | Function | IP Address | Operating System |
|----------|----------|------------|------------------|
| Jump Box | Gateway  | 10.0.0.6   | Linux            |
| Web 1    |Web Server| 10.0.0.5   | Linux            |
| Web 2    |Web Server| 10.0.0.7   | Linux            |
| Web 3    |Web Server| 10.0.0.8   | Linux            |

### Access Policies

The machines on the internal network are not exposed to the public Internet. 

Only the JumpBox Provisioner machine can accept connections from the Internet. Access to this machine is only allowed from the following IP addresses:
- 24.17.183.82

Machines within the network can only be accessed by docker.
- These machines include the three Web VM's as well as the ELK server.  

A summary of the access policies in place can be found in the table below.

| Name       | Publicly Accessible | Allowed IP Addresses         |
|------------|---------------------|------------------------------|
| Jump Box   | Yes                 | 24.17.183.82, 10.0.0.6       |
| Web Servers| No                  | 10.0.0.5, 10.0.0.7, 10.0.0.8 |
| ELK Server | No                  | 10.1.0.4,                    |

### Elk Configuration

Ansible was used to automate configuration of the ELK machine. No configuration was performed manually, which is advantageous because it allows the VM to be configured automatically. 


The playbook implements the following tasks:
- _TODO: In 3-5 bullets, explain the steps of the ELK installation play. E.g., install Docker; download image; etc._
- Install docker.io: This step downloads and installs the docker container.  
- Install pip3: This step downloads and installs the python package. 
- Install Docker python module: This step installs the module in the Docker. 
- Use more memory: This step sets the virtual memory to the stated count. 
- Download and launch a docker elk container: This step downlaods the container image and lists the parameters on which it runs. 

The following screenshot displays the result of running `docker ps` after successfully configuring the ELK instance.

- elk_docker.png

### Target Machines & Beats
This ELK server is configured to monitor the following machines:
- 10.0.0.5, 10.0.0.7, 10.0.0.8

We have installed the following Beats on these machines:
- Filebeat, Metricbeat

These Beats allow us to collect the following information from each machine:
- _TODO: In 1-2 sentences, explain what kind of data each beat collects, and provide 1 example of what you expect to see. E.g., `Winlogbeat` collects Windows logs, which we use to track user logon events, etc._
- Filebeat collects and tracks server logs, among others. It allows us to see server traffic based on region and users. 
- Metricbeat monitors and collects metrics on servers. It can be used to monitor performance of network infrastructure. 
### Using the Playbook
In order to use the playbook, you will need to have an Ansible control node already configured. Assuming you have such a control node provisioned: 

SSH into the control node and follow the steps below:
- Copy the install file to the ansible folder. Filepath: /etc/ansible/files
- Update the filebeat-config.yml (or metricbeat-config.yml) file to include the playbook configuration.
- Run the playbook, and navigate to the ELK server. Run docker container list -a to check that the installation worked as expected.

_TODO: Answer the following questions to fill in the blanks:_
- The playbook file is called filebeat-playbook.yml (or metricbeat-playbook.yml), located on the ELK server. Filepath: /etc/ansible/roles
- You must update the hosts file to include the target VM. This file is located in /etc/ansible. 
- You can then check the status using http://(serverIP)/app/kibana

_As a **Bonus**, provide the specific commands the user will need to run to download the playbook, update the files, etc._
